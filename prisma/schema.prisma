// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rol {
  ESTUDIANTE
  TUTOR_PRACTICAS
  COORDINADOR
  EMPRESA
  DIRECTOR_PROGRAMA
}

model Usuario {
  id                 String    @id @default(uuid())
  email              String    @unique
  emailVerificado    DateTime?
  password           String?
  rol                Rol       @default(ESTUDIANTE)
  imagen             String?
  fechaCreacion      DateTime  @default(now())
  fechaActualizacion DateTime  @updatedAt

  estudiante     Estudiante?
}

model Estudiante {
  id                   String   @id @default(uuid())
  fechaCreacion        DateTime @default(now())
  fechaActualizacion   DateTime @updatedAt

  usuario              Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId            String  @unique

  informacionPersonal  InformacionPersonal @relation(fields: [informacionPersonalId], references: [id])
  informacionPersonalId String             @unique
}

model TutorPractica {
  id                  String   @id @default(uuid())
  cargo               String // Cargo en la empresa
  departamentoEmpresa String // Departamento en la empresa
  fechaCreacion       DateTime @default(now())
  fechaActualizacion  DateTime @updatedAt

  informacionPersonal  InformacionPersonal @relation(fields: [informacionPersonaId], references: [id])
  informacionPersonaId String             @unique
}

model InformacionPersonal {
  id                 String   @id @default(uuid())
  nombre             String
  apellido           String
  genero             String
  telefono           String
  departamento       String
  fechaNacimiento    DateTime
  municipio          String
  direccion          String
  fechaCreacion      DateTime @default(now())
  fechaActualizacion DateTime @updatedAt

  estudiante    Estudiante?
  tutorPractica TutorPractica?
}

model RepresentanteLegal {
  id                    String    @id @default(uuid())
  nombre                String
  apellido              String
  telefono              String?
  email                 String?
  cedula                String
  documentoIdentidadUrl String
  empresa               Empresa[]

  fechaCreacion      DateTime @default(now())
  fechaActualizacion DateTime @updatedAt
}

model Empresa {
  id                   String              @id @default(uuid())
  nombre               String
  direccion            String
  NIT                  String
  telefono             String
  pais                 String
  departamento         String
  municipio            String
  email                String
  industria            String
  RUTUrl               String
  camaraComercioUrl    String?
  registroMercantilUrl String?
  representanteLegal   RepresentanteLegal @relation(fields: [representanteLegalId], references: [id])
  representanteLegalId String

  fechaCreacion        DateTime @default(now())
  fechaActualizacion   DateTime @updatedAt
}
