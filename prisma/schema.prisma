// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rol {
  estudiante
  tutor
  coordinador
  empresa
  director
}

model Usuario {
  id              String     @id @default(uuid())
  email           String     @unique
  emailVerificado DateTime?
  password        String?
  rol             Rol       @default(estudiante)
  imagen          String?
  creado          DateTime  @default(now())
  actulizado      DateTime  @updatedAt
}

model Estudiante {
  id                   String @id @default(uuid())
  codigo               Int
  creado               DateTime  @default(now())
  actulizado           DateTime  @updatedAt

  informacionPersonal  InformacioPersonal @relation(fields: [informacionPersonaId], references: [id])
  informacionPersonaId String    @unique
}

model TutorPractica {
  id                  String     @id @default(uuid())
  cargo               String     // Cargo en la empresa
  departamentoEmpresa String     // Departamento en la empresa
  creado              DateTime  @default(now())
  actulizado          DateTime  @updatedAt    
  
  informacionPersonal  InformacioPersonal @relation(fields: [informacionPersonaId], references: [id])
  informacionPersonaId String   @unique
}

model InformacioPersonal {
  id              String         @id @default(uuid())
  nombre          String 
  apellido        String
  genero          String
  telefono        Int
  departamento    Int
  municipio       Int
  direccion       String
  creado          DateTime       @default(now())
  actulizado      DateTime       @updatedAt

  estudiante      Estudiante?
  tutorPractica   TutorPractica?
}

